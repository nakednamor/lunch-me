import 'tables.dart';

-- languages
_allLanguages: SELECT * FROM languages ORDER BY lang ASC;
_getLanguageByLang: SELECT * FROM languages WHERE lang = :lang;

-- tags
_allTags: SELECT * FROM tags ORDER BY tag_group,ordering ASC;
_getMaxTagOrdering: SELECT MAX(ordering) from tags where tag_group = :tagGroupId;
_deleteTagById: DELETE FROM tags WHERE id = :id;
_getTagById: SELECT * FROM tags WHERE id = :id;
_getTagByTagGroupAndOrdering: SELECT * FROM tags WHERE tag_group = :tagGroupId AND ordering = :ordering;
_updateOrderingOfTag: UPDATE tags SET ordering = :ordering WHERE id = :id;
_tagRightPositionChange: UPDATE tags SET ordering = ( ordering - 1 ) WHERE ordering > :currentOrdering AND ordering <= :newOrdering;
_tagLeftPositionChange_1: UPDATE tags SET ordering = - ( ordering + 1 ) WHERE ordering >= :newOrdering AND ordering < :currentOrdering;
_tagLeftPositionChange_2: UPDATE tags SET ordering = - ordering WHERE ordering < 0;


-- localized tags
_countByTagGroupAndName: SELECT COUNT(lt.label) FROM localized_tags lt
    JOIN tags t on t.id = lt.tag
    WHERE t.tag_group = :tagGroupId
    AND lt.label = :label;
_renameTag: UPDATE localized_tags SET label = :label WHERE tag = :tagId AND lang = :lang;

-- tag-groups
_allTagGroups: SELECT * FROM tag_groups ORDER BY ordering ASC;
_deleteTagGroupById: DELETE FROM tag_groups where id = :id;
_getTagGroupById: SELECT * FROM tag_groups WHERE id = :id;
_getTagGroupByOrdering: SELECT * FROM tag_groups WHERE ordering = :ordering;
_getMaxTagGroupOrdering: SELECT MAX(ordering) FROM tag_groups;
_updateOrderingOfTagGroup: UPDATE tag_groups SET ordering = :ordering WHERE id = :id;
_allTagGroupsWithTags AS TagGroupWithTags: SELECT tagGroup.**, LIST(
    SELECT ltags.* FROM tags t
        INNER JOIN localized_tags ltags ON ltags.tag = t.id
        WHERE t.tag_group = tg.id AND ltags.lang = tagGroup.lang
        ORDER BY t.ordering
    ) as tags

    FROM localized_tag_groups tagGroup
    INNER JOIN tag_groups tg ON tg.id = tagGroup.tag_group
    INNER JOIN languages ON languages.id = tagGroup.lang
    WHERE languages.lang = :lang
    ORDER BY tg.ordering;
_tagGroupRightPositionChange: UPDATE tag_groups SET ordering = ( ordering - 1 ) WHERE ordering > :currentOrdering AND ordering <= :newOrdering;
_tagGroupLeftPositionChange_1: UPDATE tag_groups SET ordering = - ( ordering + 1 ) WHERE ordering >= :newOrdering AND ordering < :currentOrdering;
_tagGroupLeftPositionChange_2: UPDATE tag_groups SET ordering = - ordering WHERE ordering < 0;


-- localized tag-groups
_countTagGroupByLabel: SELECT COUNT(label) AS tagGroupCount FROM localized_tag_groups WHERE label = :label;
_renameTagGroupLabel: UPDATE localized_tag_groups SET label = :label WHERE tag_group = :tagGroupId AND lang = :lang;